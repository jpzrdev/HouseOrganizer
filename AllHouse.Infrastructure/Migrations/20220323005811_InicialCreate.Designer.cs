// <auto-generated />
using System;
using AllHouse.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AllHouse.Infrastructure.Migrations
{
    [DbContext(typeof(AllHouseContext))]
    [Migration("20220323005811_InicialCreate")]
    partial class InicialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AllHouse.Domain.Entities.HouseMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HouseMembers");
                });

            modelBuilder.Entity("AllHouse.Domain.Entities.HouseTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HouseTasks");
                });

            modelBuilder.Entity("AllHouse.Domain.Entities.HouseTaskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<Guid>("HouseMemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HouseTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HouseMemberId");

                    b.HasIndex("HouseTaskId");

                    b.ToTable("HouseTaskManagements");
                });

            modelBuilder.Entity("AllHouse.Domain.Entities.HouseTaskManagement", b =>
                {
                    b.HasOne("AllHouse.Domain.Entities.HouseMember", "HouseMember")
                        .WithMany("Tasks")
                        .HasForeignKey("HouseMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AllHouse.Domain.Entities.HouseTask", "HouseTask")
                        .WithMany("HouseMembers")
                        .HasForeignKey("HouseTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseMember");

                    b.Navigation("HouseTask");
                });

            modelBuilder.Entity("AllHouse.Domain.Entities.HouseMember", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("AllHouse.Domain.Entities.HouseTask", b =>
                {
                    b.Navigation("HouseMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
